{"version":3,"sources":["components/Contacts.module.css","redux/contacts/contacts.operations.js","redux/contacts/contacts.selector.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Contacts.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","axios","defaults","baseURL","loadingSelector","state","contacts","loading","contactsFilterSelector","filter","contactsItemsSelector","items","filteredItemsSelector","createSelector","item","name","toLowerCase","includes","trim","mapDispatch","handleDelete","contactId","dispatch","a","removeContactsRequest","delete","removeContactsSuccess","removeContactsError","connect","className","styles","ul","map","id","number","textContent","deleteContact","type","onClick","mapDispatchToProps","handleChange","filterChange","block","title","input","onChange","evt","target","value","ContactForm","handleSubmit","props","some","alert","newContact","addNewContacts","setState","onSubmit","preventDefault","this","getAllContacts","form","pattern","required","addContact","speener","color","height","width","timeout","Component","contact","addNewContactsRequest","post","data","addNewContactsSuccess","addNewContactsError","getAllContactsRequest","get","getAllContactsSuccess","getAllContactsError","Contacts"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,aAAe,+BAA+B,MAAQ,0B,4GCYxGC,IAAMC,SAASC,QAAU,wCAEzB,I,yBCZaC,EAAkB,SAACC,GAAD,OAAWA,EAAMC,SAASC,SAC5CC,EAAyB,SAACH,GAAD,OAAWA,EAAMC,SAASG,QACnDC,EAAwB,SAACL,GAAD,OAAWA,EAAMC,SAASK,OAElDC,EAAwBC,YAAe,CAChDH,EACAF,IACD,SAACG,EAAOF,GAAR,OAAmBE,EAAMF,QAAO,SAACK,GAAD,OAC/BA,EAAKC,KAAKC,cAAcC,SAASR,EAAOO,cAAcE,c,OC2BpDC,EAAc,CAClBC,aFJqB,SAACC,GAAD,8CAAe,WAAOC,GAAP,SAAAC,EAAA,6DACpCD,EAASE,eAD2B,kBAG5BvB,IAAMwB,OAAN,oBAA0BJ,IAHE,OAIlCC,EAASI,YAAsBL,IAJG,gDAMlCC,EAASK,YAAoB,EAAD,KANM,yDAAf,wDEORC,eAVE,SAACvB,GAChB,MAAO,CACLM,MAAOC,EAAsBP,MAQAc,EAAlBS,EAnCK,SAAC,GAA6B,IAA3BjB,EAA0B,EAA1BA,MAAOS,EAAmB,EAAnBA,aAC5B,OACE,oBAAIS,UAAWC,IAAOC,GAAtB,SACGpB,EAAMqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIlB,EAAP,EAAOA,KAAMmB,EAAb,EAAaA,OAAb,OACT,qBAAaL,UAAWC,IAAOK,YAA/B,UACE,8BACGpB,EADH,KACWmB,KAEX,wBACEL,UAAWC,IAAOM,cAClBC,KAAK,SACLC,QAAS,kBAAMlB,EAAaa,IAH9B,iBAJOA,W,iBC0BXM,EAAqB,CACzBC,aAAcC,KAGDb,eAVS,SAACvB,GACvB,MAAO,CACLI,OAAQD,EAAuBH,MAQKkC,EAAzBX,EAlCA,SAAC,GAA8B,IAA5BnB,EAA2B,EAA3BA,OAAQ+B,EAAmB,EAAnBA,aAIxB,OACE,sBAAKX,UAAWC,IAAOY,MAAvB,UACE,oBAAIb,UAAWC,IAAOa,MAAtB,mCACA,uBACEd,UAAWC,IAAOc,MAClBX,GAAG,SACHlB,KAAK,SACLsB,KAAK,OACLQ,SAXW,SAACC,GAChBN,EAAaM,EAAIC,OAAOC,QAWpBA,MAAOvC,U,yECPTwC,E,4MACJ5C,MAAQ,CACNU,KAAM,GACNmB,OAAQ,I,EAOVgB,aAAe,SAACnC,EAAMmB,GAGpB,GAFoB,EAAKiB,MAAMxC,MAAMyC,MAAK,SAACtC,GAAD,OAAUA,EAAKC,OAASA,KAGhEsC,MAAMtC,EAAO,+BADf,CAKA,IAAMuC,EAAa,CACjBvC,KAAMA,EACNmB,OAAQA,GAGV,EAAKiB,MAAMI,eAAeD,K,EAG5Bd,aAAe,SAACM,GACd,EAAKU,SAAL,eACGV,EAAIC,OAAOhC,KAAO+B,EAAIC,OAAOC,S,EAIlCS,SAAW,SAACX,GACVA,EAAIY,iBACJ,EAAKR,aAAa,EAAK7C,MAAMU,KAAM,EAAKV,MAAM6B,QAC9C,EAAKsB,SAAS,CAAEzC,KAAM,GAAImB,OAAQ,M,uDA7BpC,WACEyB,KAAKR,MAAMS,mB,oBA8Bb,WACE,OACE,sBAAK/B,UAAWC,IAAOY,MAAvB,UACE,uBAAMb,UAAWC,IAAO+B,KAAMJ,SAAUE,KAAKF,SAA7C,UACE,sBAAM5B,UAAWC,IAAOa,MAAxB,mBACA,uBACEd,UAAWC,IAAOc,MAClBC,SAAUc,KAAKnB,aACfQ,MAAOW,KAAKtD,MAAMU,KAClBsB,KAAK,OACLtB,KAAK,OACL+C,QAAQ,yHACRnB,MAAM,kcACNoB,UAAQ,IAEV,sBAAMlC,UAAWC,IAAOa,MAAxB,yBACA,uBACEd,UAAWC,IAAOc,MAClB7B,KAAK,SACLsB,KAAK,MACLQ,SAAUc,KAAKnB,aACfQ,MAAOW,KAAKtD,MAAM6B,OAClB4B,QAAQ,yFACRnB,MAAM,giBACNoB,UAAQ,IAEV,wBAAQlC,UAAWC,IAAOkC,WAAY3B,KAAK,SAA3C,4BAIF,qBAAKR,UAAWC,IAAOmC,QAAvB,SACGN,KAAKR,MAAM5C,QACV,cAAC,IAAD,CACE8B,KAAK,YACL6B,MAAM,UACNC,OAAQ,GACRC,MAAO,IACPC,QAAS,MAGX,Y,GA7EcC,aA4FpBnD,EAAc,CAClBoC,eJ3FqB,SAACgB,GAAD,8CAAa,WAAOjD,GAAP,iBAAAC,EAAA,6DAClCD,EAASkD,eADyB,kBAGTvE,IAAMwE,KAAK,YAAaF,GAHf,gBAGxBG,EAHwB,EAGxBA,KACRpD,EAASqD,YAAsBD,IAJC,gDAMhCpD,EAASsD,YAAoB,EAAD,KANI,yDAAb,uDI4FrBhB,eJlFqB,yDAAM,WAAOtC,GAAP,iBAAAC,EAAA,6DAC3BD,EAASuD,eADkB,kBAGF5E,IAAM6E,IAAI,aAHR,gBAGjBJ,EAHiB,EAGjBA,KACRpD,EAASyD,YAAsBL,IAJN,gDAMzBpD,EAAS0D,YAAoB,EAAD,KANH,yDAAN,wDIqFRpD,eAZE,SAACvB,GAChB,MAAO,CACLM,MAAOD,EAAsBL,GAC7BE,QAASH,EAAgBC,MASIc,EAAlBS,CAA+BqB,G,kBC1F/BgC,UAdE,WACf,OACE,sBAAKpD,UAAU,YAAf,UACE,oBAAIA,UAAWC,IAAOa,MAAtB,uBACA,cAAC,EAAD,IACA,oBAAId,UAAWC,IAAOa,MAAtB,sBACA,sBAAKd,UAAWC,IAAOY,MAAvB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Y,mBCbR3C,EAAOC,QAAU,CAAC,GAAK,wBAAwB,cAAgB,mCAAmC,YAAc,mC,mBCAhHD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,sBAAsB,MAAQ,wB,mBCAtFD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,WAAa,gCAAgC,QAAU","file":"static/js/contacts-view.1cd23c41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__iGour\",\"titleContact\":\"Contacts_titleContact__3X0De\",\"block\":\"Contacts_block__2Lwn4\"};","import axios from \"axios\";\nimport {\n  getAllContactsRequest,\n  getAllContactsSuccess,\n  getAllContactsError,\n  addNewContactsRequest,\n  addNewContactsSuccess,\n  addNewContactsError,\n  removeContactsRequest,\n  removeContactsSuccess,\n  removeContactsError,\n} from \"./contacts.actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst addNewContacts = (contact) => async (dispatch) => {\n  dispatch(addNewContactsRequest());\n  try {\n    const { data } = await axios.post(\"/contacts\", contact);\n    dispatch(addNewContactsSuccess(data));\n  } catch (error) {\n    dispatch(addNewContactsError(error));\n  }\n};\n\nconst getAllContacts = () => async (dispatch) => {\n  dispatch(getAllContactsRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(getAllContactsSuccess(data));\n  } catch (error) {\n    dispatch(getAllContactsError(error));\n  }\n};\n\nconst removeContacts = (contactId) => async (dispatch) => {\n  dispatch(removeContactsRequest());\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(removeContactsSuccess(contactId));\n  } catch (error) {\n    dispatch(removeContactsError(error));\n  }\n};\n\nexport { addNewContacts, getAllContacts, removeContacts };\n","\nimport { createSelector } from \"@reduxjs/toolkit\";\n\nexport const loadingSelector = (state) => state.contacts.loading;\nexport const contactsFilterSelector = (state) => state.contacts.filter;\nexport const contactsItemsSelector = (state) => state.contacts.items;\n  \nexport const filteredItemsSelector = createSelector([\n    contactsItemsSelector,\n    contactsFilterSelector,\n], (items, filter) => items.filter((item) =>\n    item.name.toLowerCase().includes(filter.toLowerCase().trim())\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { removeContacts } from \"../../redux/contacts/contacts.operations\";\nimport styles from \"./ContactList.module.css\";\nimport { filteredItemsSelector } from \"../../redux/contacts/contacts.selector\";\n\nconst ContactList = ({ items, handleDelete }) => {\n  return (\n    <ul className={styles.ul}>\n      {items.map(({ id, name, number }) => (\n        <li key={id} className={styles.textContent}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className={styles.deleteContact}\n            type=\"button\"\n            onClick={() => handleDelete(id)}\n          >\n            X\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n\nconst mapState = (state) => {\n  return {\n    items: filteredItemsSelector(state),\n  };\n};\n\nconst mapDispatch = {\n  handleDelete: removeContacts,\n};\n\nexport default connect(mapState, mapDispatch)(ContactList);\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport { filterChange } from \"../../redux/contacts/contacts.actions\";\nimport { connect } from \"react-redux\";\nimport { contactsFilterSelector } from \"../../redux/contacts/contacts.selector\";\n\nconst Filter = ({ filter, handleChange }) => {\n  const onChange = (evt) => {\n    handleChange(evt.target.value);\n  };\n  return (\n    <div className={styles.block}>\n      <h2 className={styles.title}>Find contacts by name</h2>\n      <input\n        className={styles.input}\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        onChange={onChange}\n        value={filter}\n      ></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: contactsFilterSelector(state),\n  };\n};\n\nconst mapDispatchToProps = {\n  handleChange: filterChange,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport {\n  addNewContacts,\n  getAllContacts,\n} from \"../../redux/contacts/contacts.operations\";\nimport { connect } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport {\n  contactsItemsSelector,\n  loadingSelector,\n} from \"../../redux/contacts/contacts.selector\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  componentDidMount() {\n    this.props.getAllContacts();\n  }\n\n  handleSubmit = (name, number) => {\n    const isDuplicate = this.props.items.some((item) => item.name === name);\n\n    if (isDuplicate) {\n      alert(name + \" is already in contacts\");\n      return;\n    }\n\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    this.props.addNewContacts(newContact);\n  };\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  onSubmit = (evt) => {\n    evt.preventDefault();\n    this.handleSubmit(this.state.name, this.state.number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <div className={styles.block}>\n        <form className={styles.form} onSubmit={this.onSubmit}>\n          <span className={styles.title}>Name:</span>\n          <input\n            className={styles.input}\n            onChange={this.handleChange}\n            value={this.state.name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n          <span className={styles.title}>Number Tel:</span>\n          <input\n            className={styles.input}\n            name=\"number\"\n            type=\"tel\"\n            onChange={this.handleChange}\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n          <button className={styles.addContact} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n        <div className={styles.speener}>\n          {this.props.loading ? (\n            <Loader\n              type=\"ThreeDots\"\n              color=\"#00BFFF\"\n              height={50}\n              width={100}\n              timeout={3000}\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    items: contactsItemsSelector(state),\n    loading: loadingSelector(state),\n  };\n};\n\nconst mapDispatch = {\n  addNewContacts,\n  getAllContacts,\n};\n\nexport default connect(mapState, mapDispatch)(ContactForm);\n","import React from \"react\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport styles from \"./Contacts.module.css\";\n\nconst Contacts = () => {\n  return (\n    <div className=\"container\">\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={styles.title}>Contacts</h2>\n      <div className={styles.block}>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__2SEi_\",\"deleteContact\":\"ContactList_deleteContact__DqEVs\",\"textContent\":\"ContactList_textContent__3tdJz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Filter_block__3EzTt\",\"title\":\"Filter_title__mtLuE\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ContactForm_block__3L7f5\",\"form\":\"ContactForm_form__1fuOn\",\"title\":\"ContactForm_title__3MqSl\",\"input\":\"ContactForm_input__gm87B\",\"addContact\":\"ContactForm_addContact__1rNoD\",\"speener\":\"ContactForm_speener__2h4CR\"};"],"sourceRoot":""}